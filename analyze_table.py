import matplotlib.pyplot as plt
from scipy.special import logit
from scipy.stats.stats import pearsonr
import sys
import io
import numpy as np

# USAGE:
# interpret and plot the results generated by predictor_tables


def select(table, column):
    return [row[column] for row in table]


def read_table(file, starting_column):
    table = []

    for line in file:
        row = line[:-1].split(",")[starting_column:]
        probs = map(float, row)
        table.append(probs)
    return table


def plot(x, y, xlabel, ylabel, title):
    plt.close()
    plt.xlabel(xlabel)
    plt.ylabel(ylabel)
    plt.scatter(x, y, alpha=0.2)

    p = np.poly1d(np.polyfit(x, y, 1))
    xx = np.linspace(min(x), max(x), num=100)

    plt.plot(xx, p(xx), "r-")

    plt.title(title)
    print pearsonr(x, y)[0]
    plt.show()


def logit_plot(x, y, xlabel, ylabel, title):
    plot(logit(x), logit(y), "logit " + xlabel, "logit " + ylabel, title)

if __name__ == "__main__":
    stdin = io.open(sys.stdin.fileno(), "r", encoding="utf-8")

    STARTING_COLUMN = 3
    header = stdin.readline()[:-1].split(",")[STARTING_COLUMN:]
    table = read_table(stdin, STARTING_COLUMN)

    for i, name in enumerate(header):
        if i > 0:
            cloze_prob, prob = select(table, 0), select(table, i)
            logit_plot(cloze_prob, prob, header[0], name, "probabilities")
